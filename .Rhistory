library(devtools)
has_devel()
has_devel()
install.packages(c("devtools", "roxygen2", "testthat", "knitr"))
install.packages(c("devtools", "roxygen2", "testthat", "knitr"))
library(devtools)
library(devtools)
has_devel()
has_devel()
install.packages("devtools")
install.packages("devtools")
library(devtools)
has_devel()
library()
library(devtools)
has_devel()
install.packages("roxygen2")
install.packages("testthat")
library(devtools)
library(roxygen2)
library(testthat)
library(knitr)
has_devel()
install.packages("rstudioapi")
rstudioapi::isAvailable("0.99.149")
rstudioapi::isAvailable("0.99.149")
library(devtools)
has_devel()
library(devtools)
has_devel()
devtools::find_rtools(TRUE)
if ("devtools" %in% loadedNamespaces()) {
stop("You must restart R before installing devtools")
}
url <- "https://gist.github.com/raw/4506250/devtools.zip"
temp <- file.path(tempdir(), "devtools.zip")
setInternet2(TRUE)
suppressWarnings(download.file(url, temp, mode = "wb"))
install.packages(temp, repos = NULL)
file.remove(temp)
library(devtools)
has_devel()
library()
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
install.packages('digest')
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
?sum
?dplyr::mutate
?dplyr::filter
?dplyr::select
?quantmod
??quantmod
?quantmod::getSymbols
library(roxygen2)
k
devtools::document()
?CompanyInfo
??finreportr::CompanyInfo
devtools::load_all(".")
?CompanyInfo
library(devtools)
devtools::load_all()
?CompanyInfo
?finreportr
devtools::load_all(".")
?finreportr
devtools::load_all()
?finreportr
?quantmod
library(quandmod)
library(quantmod)
?quantmod
?finreportr
library(finreportr)
?CompanyInfo
?company_info
?finreportr::CompanyInfo
?finreportr::company_info
library(finreportr)
?CompanyInfo
?finreportr::CompanyInfo
library(finreportr)
?CompanyInfo
devtools::load_all()
?CompanyInfo
CompanyInfo("GOOG")
example(CompanyInfo)
example(finreportr::CompanyInfo)
?finreportr
devtools::load_all(".")
?finreportr
?finreportr::CompanyInfo
library(finreportr)
?CompanyInfo
?read.csv
library(finreportr)
?CompanyInfo
?AnnualReports
?CompanyInfo
?AnnualReports
?AnnualReports
?CompanyInfo
?finreportr
devtools::load_all(".")
?CompanyInfo
?AnnualReports
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
library(finreportr)
?CompanyInfo
?AnnualReports
library(finreportr)
?GetIncome
library(finreportr)
?GetIncome
?AnnualReports
?GetIncome
library(finreportr)
?GetIncome
?balance.sheet.descriptions
library(finreportr)
library(finreportr)
?GetIncome
?GetBalanceSheet
library(finreportr)
library(finreportr)
library(finreportr)
?AnnualReports
?GetIncome
?GetBalanceSheet
?AnnualReports
?finreportr
?AnnualReports
library(finreportr)
?finreportr
library(finreportr)
?finreportr-package
?finreportr
??finreportr
library(finreportr)
devtools::use_vignette("finreportr")
browseVignettes()
devtools::use_testthat()
devtools::test()
devtools::test()
library(testthat)
library(finreportr)
test_check("finreportr")
?finreportr
library(finreportr)
?finreportr
devtools::load_all(".")
?finreportr
?AnnualReports
?CompanyInfo
?GetIncome
?GetBalanceSheet
devtools::load_all(".")
CompanyInfo("GOOG")
library(rvest)
library(XBRL)
library(XML)
CompanyInfo("GOOG")
?CompanyInfo
library(dplyr)
library(RCurl)
GetIncome("GOOG", 2015)
GetIncome("YHOO", 2013)
?GetBalanceSheet
?finreportr
devtools::load_all(".")
?finreportr
library(finreportr)
CompanyInfo("GOOG")
library(finreportr)
CompanyInfo("GOOG")
finreportr::CompanyInfo("GOOG")
?CompanyInfo
library(finreportr)
CompanyInfo("GOOG")
AnnualReports("GOOG")
?AnnualReportrs
?AnnualReports
devtools::load_all(".")
CompanyInfo("GOOG")
library(XML)
library(dplyr)
library(RCurl)
library(rvest)
library(XBRL)
CompanyInfo("GOOG")
devtools::use_testthat()
dim(CompanyInfo("GOOG"))
x <- dim(CompanyInfo("GOOG"))
x
type(x)
class(x)
class(CompanyInfo("GOOG"))
test_that("CompanyInfo returning correct dimensions" {
expect_equal(dim(CompanyInfo("GOOG")), c(1, 8))
})
library(testthat)
test_that("CompanyInfo returning correct dimensions" {
expect_equal(dim(CompanyInfo("GOOG")), c(1, 8))
})
expect_equal("CompanyInfo returning correct dimensions" {
expect_equal(dim(CompanyInfo("GOOG")), c(1, 8))
})
c(1,8)
testthat("CompanyInfo returning correct dimensions" {
expect_equal(dim(CompanyInfo("GOOG")), c(1, 8))
})
testthat("CompanyInfo returning correct dimensions",
{dim(CompanyInfo("GOOG")), c(1,8)
}
testthat("CompanyInfo returning correct dimensions",
{dim(CompanyInfo("GOOG")), c(1,8)
})
testthat("CompanyInfo returning correct dimensions", {
expect_equal(dim(CompanyInfo("GOOG")), c(1, 8))
})
test_that("CompanyInfo returning correct dimensions", {
expect_equal(dim(CompanyInfo("GOOG")), c(1, 8))
})
test_that("CompanyInfo returning correct dimensions", {
expect_equal(dim(CompanyInfo("GOOG")), c(1, 8))
})
test_that("CompanyInfo returning correct dimensions", {
expect_equal(dim(CompanyInfo("GOOG")), c(1, 9))
})
test_that("CompanyInfo returning correct dimensions", {
expect_equal(dim(CompanyInfo("GOOG")), c(1, 8))
expect_equal(dim(CompanyInfo("TSLA")), c(1, 8))
expect_equal(dim(CompanyInfo("FB")), c(1, 8))
})
test_that("CompanyInfo returning correct dimensions", {
expect_equal(dim(CompanyInfo("GOOG")), c(1, 8))
expect_equal(dim(CompanyInfo("TSLA")), c(1, 8))
expect_equal(dim(CompanyInfo("FB")), c(1, 7))
})
library(testthat)
library(finreportr)
test_check("finreportr")
test_that("CompanyInfo returning correct dimensions", {
expect_equal(dim(CompanyInfo("GOOG")), c(1, 8))
expect_equal(dim(CompanyInfo("TSLA")), c(1, 8))
expect_equal(dim(CompanyInfo("FB")), c(1, 8))
})
library(testthat)
library(finreportr)
test_check("finreportr")
library(testthat)
library(finreportr)
test_check("finreportr")
devtools::create()
devtools::create()
devtools::use_data()
CompanyInfo("GOOG")
list.files()
get.wd()
getwd()
CompanyInfo("BABA")
View(CompanyInfo("BABA"))
CompanyInfo("ASX")
CompanyInfo("TSLA")
getwd()
setwd("C:/Users/Seward/Desktop/")
list.files()
read.csv("statecodes.csv", header = TRUE, stringsAsFactors = FALSE)
xyz <- read.csv("statecodes.csv", header = TRUE, stringsAsFactors = FALSE)
xyz
names(xyz)
devtools::use_data(xyz, statecodes)
setwd("C:/Users/Seward/Desktop/finreportr")
devtools::use_data(xyz, statecodes)
xyz
?use_data
statecodes <- xyz
statecodes
devtools::use_data(statecodes, finreportr)
devtools::use_data(statecodes, pkg = "finreportr")
setwd("..")
getwd()
devtools::use_data(statecodes, pkg = "finreportr")
devtools::use_data(statecodes, pkg = "finreportr", overwrite = TRUE)
read.csv("siccodes.csv", header = TRUE, stringsAsFactors = FALSE)
siccodes <- read.csv("siccodes.csv", header = TRUE, stringsAsFactors = FALSE)
devtools::use_data(siccodes, pkg = "finreportr")
search()
data(siccodes)
x <- data(siccodes)
x
siccodes
siccodes
statecodes
xyz
AnnualReports("GOOG")
GetIncome("GOOG", 2015)
?read_html
?XML::read_html
read_html
?read_html
?rvest::read_html
read_html
XML::read_html
devtools::load_all(".")
library(finreportr)
CompanyInfo("GOOG")
search()
CompanyInfo("YHOO")
CompanyInfo("SQ")
devtools::load_all(".")
AnnualReports("GOOG")
AnnualReports("FB")
?AnnualReports
search()
library()
?GetIncome
GetAccessionNo("GOOG", 2014)
GetIncome("GOOG", 2017)
GetAccessionNo("GOOG", 2017)
devtools::load_all(".")
devtools::load_all(".")
GetIncome("GOOG", 2014)
GetBalanceSheet("GOOG", 2014)
devtools::load_all(".")
example(merge)
example(GetIncome)
?merge
siccodes
citation()
citation("dplyr")
citation(dplyr)
citation("dplyr")
citation("quantmod")
citHeader("To cite 'to finreportr in publicatons use:")
citHeader("To cite finreportr in publicatons use:")
citation("finreportr")
citation("quantmod")
citation("finreportr")
citation("ggplot2")
citation("quantmod")
citation("finreportr")
data(siccodes)
xyz <- data(siccodes)
xyz
?data
data("siccodes.Rda")
data("siccodes.rda")
devtools::load_all(".")
data(siccodes)
data("statecodes.rda")
data("siccodes.rda")
siccodes
siccodes
statecodes
statecodes
?siccodes
finreportr::siccodes
finreportr::statecodes
?finreportr:statecodes
?finreportr::statecodes
finreportr::statecodes
ggplot2::diamonds
finreportr::statecodes
finreportr::siccodes
?diamonds
?statecodes
?siccodes
?statecodes
?statecodes
statecodes
?statecodes
?siccodes
?siccodes
?siccodes
siccodes
siccodes()
siccodes
diamonds
ggplot2::diamonds
?siccodes
?diamonds
?siccodes
?GetIncome
?siccodes
?statecodes
library(zipcode)
install.packages("zipcode")
---
library(finreportr)
AnnualReports("FB")
library(finreportr)
?AnnualReports
AnnualReports("FB")
finreportr::AnnualReports("FB")
CompanyInfo("FB")
devtools::load_all(".")
CompanyInfo("GOOG")
AnnualReports("FB")
For example, suppose we want to display the annual reports filed by Facebook (symbol: `FB`):
GetIncome("TSLA")
head(GetIncome("TSLA", 2015))
* [Central Index Key ("CIK")](https://en.wikipedia.org/wiki/Central_Index_Key)
siccodes
siccodes
finreportr::siccodes
siccodes
siccodes()
seccodes
finreportr::seccodes
finreportr::siccodes
finreportr::statecodes
statecodes
library(ggplot2)
diamonds
statecodes
?diamonds
GetIncome
?siccodes
GetBalanceSheet("AAPL", 2012)
head(GetBalanceSheet("AAPL", 2012))
head(GetCashFlow("LNKD", 2014))
GetIncome("GOOG")
CompanyIncome("GOOG")
CompanyInfo("GOOG")
CompanyInfo("55555")
CompanyInfo(55555)
AnnualReports(55555)
?GetIncome
?finreportr
GetIncome("BABA")
CompanyInfo("BABA")
---
